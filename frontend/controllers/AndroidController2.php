<?php

namespace frontend\controllers;





use backend\models\CodeOff;
use backend\models\MainApp;
use backend\models\Tbldeliverprice;
use common\components\jdf;
use common\models\User;
use frontend\models\Faceexist;
use frontend\models\Tblbag;
use frontend\models\Tblbrand;
use frontend\models\TblcategoryProduct;
use frontend\models\Tblexist;
use frontend\models\Tblgallery;
use frontend\models\Tblproduct;
use frontend\models\Tblprofile;
use frontend\models\TblSodorFactor;
use phpDocumentor\Reflection\Types\Null_;

use yii;

use yii\rest\ActiveController;





/**

 * Country Controller API

 *

 * @author Budi Irawan <deerawan@gmail.com>

 */

class AndroidController extends ActiveController

{

    public $modelClass = 'frontend\models\Tblsize';





    public function init()

    {

        if (\Yii::$app->request->authUser != null && \Yii::$app->request->authPassword != null) {



            $username = \Yii::$app->request->authUser;;

            $password = \Yii::$app->request->authPassword;

            $user = User::findByUsername($username);

            if ($user != null) {

                if ($user->validatePassword($password)) {

                    Yii::$app->getUser()->login($user);



                } else {

                    print "یوزر و پسورد شما اشتباه است";

                    exit;

                }

            }

        }



        parent::init();

        \Yii::$app->user->enableSession = false;

    }





    public function behaviors()

    {

        $behaviors = parent::behaviors();

        $behaviors['authenticator'] = [

            'class' => yii\filters\auth\HttpBasicAuth::className(),

            'auth' => function ($user, $pass) {

                $user = User::findByUsername($user);

                if ($user != null) {

                    return $user;

                }



            },

            'only' => ['myorderse'],

        ];

        $behaviors['access'] = [



            'class' => yii\filters\AccessControl::className(),

            'only' => ['signup', 'savepres', 'login', 'getpolyline', 'cart', 'detail_cart', 'cart_update', 'payment', 'listfactor', 'listcart'],

            'rules' => [

                [

                    'actions' => ['signup', 'login', 'display_main', 'cart', 'detail_cart', 'cart_update', 'payment', 'listfactor', 'listcart'],

                    'allow' => true,

                    'roles' => ['?'],

                ],



                [

                    'actions' => ['getpolyline', 'savepres', 'login', 'test2', 'display_main', 'cart', 'detail_cart', 'cart_update', 'payment', 'listfactor', 'listcart'],

                    'allow' => true,

                    'roles' => ['@'],

                ],

            ],

        ];



        return $behaviors;

    }



    public function checkAccess($action, $model = null, $params = [])

    {

        return $model;

    }



    public function actions()

    {

        $action = parent::actions(); // TODO: Change the autogenerated stub

        unset($action['create']);

        return $action;

    }


    //بررسی نشد
    
//در این اکشن فروشگاه مشخص شده که برای کار اقای نصیری نیازی نداریم من اصلاحش کردم و برش داشتم
//این اکشن رو متوجه نشدم برای چیه اما کار میکند
    public function actionDisplay_main()

    {

        $pro =Tblproduct::find()->orderBy(["id" => SORT_DESC])->all();

        $countPro = 0;

        $namePro = null;



        $model = new MainApp();

        $main = $model->find()->all();

//        $group2 = Group::find()->where(['enabel' => 1])->andWhere(['enabel_view' => 1])->all();

//        $group = null;

//        if ($pro != null && $group2 != null && $main != null) {
            if ($pro != null && $main != null) {
            if ($pro != null) {

                foreach ($pro as $rowPro) {

                    if ($countPro == 0) {

                        $namePro =  $rowPro->name. "##".$rowPro->id  ;

                    } else {

                        $namePro .= "@@"  . $rowPro->name."##".$rowPro->id ;

                    }

                    $countPro++;

                }

            }
//
//            foreach ($group2 as $g) {
//
//                $group .= $g->id . '_' . $g->city . '-' . $g->location . ',';
//
//            }

            foreach ($main as $row) {

                if ($row->type != null) {

                    $send['type'] = $row->type;

                    $send['m_d_f'] = $row->m_d_f;

                    $send['id_m_d_f'] = $row->id_m_d_f;

                    $send['urlimg'] = $row->urlimg;

                    $send['img1'] = $row->img1;

                    $send['img2'] = $row->img2;

                    $send['img3'] = $row->img3;

                    $send['img4'] = $row->img4;

                    $send['id1'] = $row->id1;

                    $send['id2'] = $row->id2;

                    $send['id3'] = $row->id3;

                    $send['id4'] = $row->id4;

                        ($row->headrtype!=null ? $headrtype = $row->headrtype : $headrtype = "نمایش" );

                    ($row->footertype!=null ? $footertype = $row->footertype : $footertype = "نمایش" );

                    $send['headerType'] = $headrtype;

                    $send['footerType'] = $footertype ;

                    $send['text1'] = $row->text1;

                    $send['text2'] = $row->text2;

                    $send['text3'] = $row->text3;

                    $sendFull[] = $send;

                }

                $sendOk["result"] = 1;

                $sendOk["pro"] = $sendFull;

//                $sendOk["group"] = $group;

                $sendOk["name"] = $namePro;

            }

        } else {

            $sendOk["result"] = 0;

//            $sendOk["msg"] = "یکی از سه مورد زیر خالی است 1- نام محصول 2- مناطق 3- صفحه اول اپلیکیشن";
             $sendOk["msg"] = "یکی از 2 مورد زیر خالی است 1- نام محصول 2- صفحه اول اپلیکیشن";

        }

        return $sendOk;

    }


    //بررسی نشد

//در این اکش باید جدول فاکتور پر شود که ابتدا چک میشود ایا محصول موجود میباشد یا خیر سپس فاکتور بسته میشود
//داده های ارسالی لازم آدرس شماره تماس گیرنده و نام گیرنده و نوع ارسال که تعیین کننده هزینه پست است و همچنین کد تخفیف  میباشد
//نکته کد تخفیف یکسری کد هستش که مدیر تعیینشون کرده و در اختیار مشتریان قرار داده است نوعی تخفیف
    public function actionPayment()

    {
        if(Yii::$app->user->isGuest){

            $send['msg']='ابتدا لاگین کنید';
            $send['result']=0;
            return $send;
        }

        if(isset($_POST['address']) && $_POST['address']!=null && isset($_POST['userName'])  && $_POST['userName']!=null
            && isset($_POST['userTell']) &&$_POST['userTell']!=null && isset($_POST['typePost']) && $_POST['typePost']!=null
            && isset($_POST['codeOff']) && $_POST['codeOff']!=null){


            $factor= new TblSodorFactor();
            $bag=Tblbag::find()->where(['id_user'=>Yii::$app->user->getId()])->andWhere(['down_buy'=>0])->all();
            $count=Tblbag::find()->where(['id_user'=>Yii::$app->user->getId()])->andWhere(['down_buy'=>0])->count();
            $pro1=Tblproduct::find()->where(['enabel_view'=>1])->all();




//در این قسمت جمع قیمت سبد خرید را محاسبه میکنیم
            $price_all =0;
            foreach ($bag as $b) {
                $price_all += $b->price;
            }

//            کد ارسالی توسط کاربر چک میشود که ایا اعتبار دارد یا اصلا وجود دارد یا خیر
            $code=CodeOff::find()->where(['code'=>$_POST['codeOff']])->andWhere(['enabel_view'=>1])->one();
            if($code!=null){
//                در صورت صحت کد تخفیف این کد را باید غیر فعال کنیم به همین جهت enabel_view=0 میشود
                $code->enabel_view=0;
                $code->save();

//                قیمت نهایی با احتصاب کد تخفیف بدست میاید
            $price=$price_all-($price_all*$code->price/100) ;
            }else{
                $price=$price_all;
            }

//            ابتدا تمام اطلاعات اضافه جدول faceexist رو پاک میکنیم سپس موجودی تمام محصولات را در این جدول ذخیره میکنیم
            $face=Faceexist::deleteAll();
            foreach ($pro1 as $p1){
                $face=new Faceexist();
                $face->id_pro=$p1->id;
                $face->exist=$p1->exist;
                $check=Faceexist::find()->where(['id_pro'=>$p1->id])->count();
                if($check==0){
                    $face->save();
                }
            }

//            در اینجا موجودی محصولی با تعدادی که از محصول ثبت شده بررسی میشود
                foreach ($bag as $b) {
                    $exist =Faceexist::find()->where(['id_pro'=>$b->id_pro])->one();
//                    در صورتی که موجودی کمتر باشد محصول از سبد خرید حذف میشود
                    if ($exist->exist < $b->count) {

                        $b->delete();
                    }else{
//                        در غیر این صورت تعداد موجودی به تعدادی که از محصول خرید شده کم میشود
                        $exist->exist=$exist->exist-$b->count;
                        $exist->save();
                    }
                }
                $count2 = Tblbag::find()->where(['id_user' => Yii::$app->user->getId()])->andWhere(['down_buy' => 0])->count();
// در اینجا تعداد کل محصولاتی که الان در سید خرید وجود دارند با تعداد محصول قبل از گذشتن از فیلتر بالا مقایسه میشود در صورتی که تعدادشان یکی بود
//روند ادامه پیدا میکند در غیر این صورت به اکتیوتی قبل بر میگردد و پیام محصولاتی که موجود نبودند از سبد خرید حذف شدند را برای کاربر چاپ میکند
                if ($count != $count2) {


//                    در صورتی که تعداد برابر نبودند باید کدی که استفاده شده دوباره فعال شود
                    $code=CodeOff::findOne($_POST['code_off']);
                    if($code!=null){
                        $code->enabel_view=1;
                        $code->save();
                    }

                    $send['msg']= 'محصولاتی که موجود نبودند از سبد خرید شما حذف شدند';
                    $send['result']=0;
                    return $send;
                } else {

                    $factor->id_user = Yii::$app->user->getId();
                    $factor->data = date('Y/m/d');
                    $date = new jdf();
                    $factor->data_ir = $date->date('Y/m/d');
                    $factor->code_off = $_POST['codeOff'];
                    $factor->adress=$_POST['address'];
                    $factor->user_name=$_POST['userName'];
                    $factor->user_tel=$_POST['userTell'];
                    $factor->id_type_post=$_POST['typePost'];
//                    هزینه به اضافه جمع قیمت ها میشود
                    $deliver_price = Tbldeliverprice::findOne($factor->id_type_post);
                    $factor->price = $price + $deliver_price->price;

                    if ($factor->save()) {
                        $send['id_fac']=$factor->id;
                        $send['price']=$factor->price;
                        $send['id_user']=$factor->id_user;
                        $send['result']=0;
                        return $send;
                    } else {
                      
                        $code=CodeOff::findOne($_POST['code_off']);
                        if($code!=null){
                            $code->enabel_view=1;
                            $code->save();
                        }
                        $send['msg']='در ذخیره اطلاعات مشکلی پیش امده';
                        $send['result']=0;
                        return $send;
                    }
                }




        }else{
            $send['msg']='اطلاعات ارسالی درست نمیباشد.';
            $send['result']=0;
            return $send;
        }





    }


//تغییری نکرد
    public function actionListfactor()

    {

        if (Yii::$app->user->isGuest) {

            $send['result'] = 0;

            $send['msg'] = " شما لاگین نکرده اید";

            return $send;

            exit;

        };

        $tblFactor = new TblSodorFactor();

        $factor = $tblFactor->find()->andWhere(['id_user' =>Yii::$app->user->getId()])->andWhere(['!=', 'atu', ""])->andWhere('id_ref != :ref', ['ref' => ""])->orderBy(["id" => SORT_DESC])->all();

        if ($factor == null) {

            $send['result'] = yii::$app->user->getId();

            $send['msg'] = "شما هیچ فاکتور پرداخت شده ای ندارید";

            return $send;

            exit;

        }

        foreach ($factor as $row) {

            $listFactor['idFactor'] = $row->id;

            $listFactor['price'] = $row->price;

            $status = null;

            if ($row->resive == 1 && $row->print == 1 && $row->visibel == 1) {

                $status = "سفارش را دریافت کرده اید ";

            } else if ($row->print == 1 && $row->visibel == 1) {

                $status = "تا لحظات دیگر پیک موتوری سفارش شما را می رساند";

            } else if ($row->visibel == 1) {

                $status = "اپراتور شرکت در حال آماده سازی سفارش شما میباشد";

            } else if ($row->visibel == 0) {

                $status = "در صف انتظار جهت بررسی";

            }



            $listFactor['status'] = $status;

            $listFactor['date'] = $row->data_ir;

            $list[] = $listFactor;

        }

        $send['result'] = 1;

        $send['factor'] = $list;

        return $send;

    }


//تغییری نکرد
    public function actionCheckpayment()

    {

        if (isset($_POST['id']) && $_POST['id'] != null) {

            if (Yii::$app->user->isGuest) {

                print " شما لاگین نکرده اید";

                exit;

            }

            $tblFactor =TblSodorFactor::find()->where(['id' => $_POST['id']])->one();

            if ($tblFactor == null) {

                $send['result'] = 0;

                $send['msg'] = "متاسفانه پرداخت انجام نشد";

            } elseif ($tblFactor != null) {

                if ($tblFactor->id_ref != null) {

                    $send['result'] = 1;

                    $send['ref'] = $tblFactor->id_ref;

                    $send['price'] = $tblFactor->price;

                    $send['atu'] = $tblFactor->atu;

                    $send['msg'] = "پرداخت انجام شد";

                } else {

                    $send['result'] = 0;

                    $send['msg'] = "متاسفانه پرداخت انجام نشد";

                }



            }

        }

        return $send;

    }


//بررسی شد
    public function actionDetail_product()

    {

        if (isset($_POST["id"]) && $_POST["id"] != null && isset($_POST["catOrPro"]) && $_POST["catOrPro"] != null) {

            $url = yii::$app->urlManager;

            $catOrPro = $_POST["catOrPro"];

            $checFull = 1;

            if ($catOrPro == "d") {

                $tblCat = new TblcategoryProduct();

                $cat = $tblCat->find()->where(["id_parent" => $_POST["id"]])->andWhere(["enabel" => 1])->andWhere(["enabel_view" => 1])->all();

                $model = new Tblproduct();

                $pro = $model->find()->where(["id_category" => $_POST["id"]])->andWhere(["enabel" => 1])->andWhere(["enabel_view" => 1])->all();

                if ($cat != null) {

                    $checFull = 1;

                    foreach ($cat as $catRow) {

                        $sendItemCat["id"] = $catRow->id;

                        $sendItemCat["name"] = $catRow->name;

                        $sendItemCat["description"] = $catRow->description;

                        $sendCat[] = $sendItemCat;

                    }

                    $send["cat"] = $sendCat;

                } else {

                    $check = 0;

                    $checFull = 0;

                }

                if ($pro != null) {

//                    $tblGaleri = new Gallery();

                    $check = 1;

                    foreach ($pro as $proRow) {

//                        $img = explode(',', $proRow->id_img);

//                        $showImg = $tblGaleri->find()->where(["id" => $img[0]])->one();
                        $img=$proRow->img;
                        $sendItemPro["id"] = $proRow->id;

                        ($proRow->id_category != null ? $id_category = $proRow->id_category : $id_category = 0);

                        $sendItemPro["id_cat"] = $id_category;

//                        ($showImg->img != null ? $img = $showImg->img : $img = "user.png");

                        $sendItemPro["img"] = $url->hostInfo . "/upload/" . $img;

                        ($proRow->name != null ? $name = $proRow->name : $name = "بدون نام");

                        $sendItemPro["name"] = $name;

                        ($proRow->takhfif != null ? $takhfif = $proRow->takhfif : $takhfif = 0);

                        $sendItemPro["price"] = $takhfif;

//                        ($proRow->emtiaz != null ? $emtiaz = $proRow->emtiaz : $emtiaz = 0);

//                        $sendItemPro["count"] = $emtiaz;

                        $sendPro[] = $sendItemPro;

                    }

                    $send["pro"] = $sendPro;

                } else {

                    $check = 0;

                    if ($checFull == 0) {

                        $checFull = 0;

                    } else if ($checFull == 1) {

                        $checFull = 1;

                    }

                }

                if ($check == 1 && $checFull == 1) {

                    //m ok d ok 2

                    $send["result"] = 2;

                } else if ($check == 1 && $checFull == 0) {

                    //m ok d null

                    $send["result"] = 1;

                } else

                    if ($check == 0 && $checFull == 1) {

                        //D ok m null 3

                        $send["result"] = 3;

                    } else

                        if ($check == 0 && $checFull == 0) {

                            //D null m null

                            $send["result"] = 0;

                        }

                return $send;



            } elseif ($catOrPro == "m") {

                $model = new Tblproduct();

                $pro = $model->find()->where(["id" => $_POST["id"]])->one();



                if ($pro != null) {

                    $img=$pro->img;



                    if ($pro->id_brand != null) {
                        $brand=Tblbrand::findOne($pro->id_brand);
                        $txtBrand = $brand->brand;

                    } else {

                        $txtBrand = "بوکلر";

                    }

                    $shop = " موجودی کالا";

                    if ($pro->exist != 0) {

                        $shop .= "," . "موجود است";

                    } else {

                        $shop .= "," . "موجود نیست";

                    }

                    $sendMainPro["shop"] = $shop;

                    $sendMainPro["result"] = 1;



                    $sendMainPro["id"] = $pro->id;

                    ($pro->id_category != null ? $id_category = $pro->id_category : $id_category = 0);

                    $sendMainPro["id_category"] = $id_category;

                    $sendMainPro["brand"] = $txtBrand;


                    $sendMainPro["img"] = $url->hostInfo . "/upload/" . $img;

                    ($pro->description != null ? $description = $pro->description : $description = "توضیح خاصی ندارد");

                    $sendMainPro["description"] = $description;

                    ($pro->text_meta != null ? $text_meta = $pro->text_meta : $text_meta = "توضیح خاصی ندارد");

                    $sendMainPro["des"] = $text_meta;

                    $sendMainPro["enabel"] = $pro->enabel;

                    $sendMainPro["enabel_view"] = $pro->enabel_view;

                    ($pro->name != null ? $name = $pro->name : $name = "بدون نام");

                    $sendMainPro["name"] = $name;

                    ($pro->price != null ? $price = $pro->price : $price = 0);

                    $sendMainPro["price"] = $price;

                    ($pro->takhfif != null ? $takhfif = $pro->takhfif : $takhfif = 0);

                    $sendMainPro["priceOff"] = $takhfif;



                    $send["pro"] = $sendMainPro;



                    return $send;

                } else {

                    $send["result"] = 0;

                    $send["alert"] = "این محصول در حال حاضر موجود نمی باشد";

                    return $send;

                }

            }


        } else {

            $send["result"] = 0;

            $send["alert"] = "داده های ارسالی به سایت اشباه است";

            return $send;

        }

        $send["result"] = 0;

        $send["alert"] = "این درخواست نامفهوم میباشد";

        return $send;

    }



    /**

     * This is the model class for table "main_app".

     *

     * @property string $

     * @property string $

     * @property string $

     * @property string $

     * @property string $

     * @property string $text3

     */



        public function actionSignup()

    {



        $p = Yii::$app->getRequest()->getBodyParams();

        if (isset($_POST['username']) && $_POST['username'] != null

            && isset($_POST['password']) && $_POST['password'] != null

            && isset($_POST['name']) && $_POST['name'] != null


            && isset($_POST['lastname']) && $_POST['lastname'] != null


            && isset($_POST['tell']) && $_POST['tell'] != null


            && isset($_POST['adress']) && $_POST['adress'] != null

        ) {

            

            $user4 = User::findByUsername($_POST['username']);

            if ($user4 != null) {

                print "این نام کاربری قبلا ثبت شده است";

                exit;

            }




            $user = new User();

            $user->username = $_POST['username'];

            $user->setPassword($_POST['password']);

            $user->generateAuthKey();

            $auth = Yii::$app->authManager;

            $authorRole = $auth->getRole('user');

            if (!$user->save()) {

                print "متاسفانه کاربر ذخیره نشد";

                exit;

            }

            $auth->assign($authorRole, $user->getId());

            $Profile = new Tblprofile();

            $Profile->addres = $_POST['adress'];

            $Profile->name = $_POST['name'];

            $Profile->lastname = $_POST['lastname'];

            $Profile->tell = $_POST['tell'];

            $Profile->id_user = $user->getId();

            $Profile->role = 'کاربر';

       

            if ($Profile->save()) {

                if (Yii::$app->getUser()->login($user)) {

                    print "1";

                    exit;

                } else {

                    print "در ورود کاربر مشکلی وجود دارد";

                    exit;

                }

            } else {



                $user->delete();

               

                 print "در ثبت اطاعات پروفایل مشکلی وجود دارد";

                exit;

            }

        } else if (isset($_POST['username']) && $_POST['username'] != null && isset($_POST['password']) && $_POST['password'] != null) {



            $username = $p['username'];

            $password = $p['password'];

            $user = User::findByUsername($username);

            if ($user != null) {

                if ($user->validatePassword($password)) {

                    Yii::$app->getUser()->login($user);

                    print "1";

                    exit;

                } else {

                    print "نام کاربری و پسورد اشتباه است";

                    exit;

                }

            } else {

                print "نام کاربری و پسورد اشتباه است";

                exit;

            }

        } else {

            print "اطلاعات ارسالی اشباه است";

        }

    }



    public function actionLogin()

    {



        $p = Yii::$app->getRequest()->getBodyParams();

        if (isset($_POST['username']) && $_POST['username'] != null && isset($_POST['pass']) && $_POST['pass'] != null) {

            $username = $p['username'];

            $password = $p['pass'];

            $user = User::findByUsername($username);

            if ($user != null) {

                if ($user->validatePassword($password)) {

                    Yii::$app->getUser()->login($user);

                    print "1";

                    exit;

                } else {

                    print "2";

                    exit;

                }

            } else {

                print "2";

                exit;

            }



        } else {

            print "3";

        }

    }


//تغییری نکرد
    public function actionCart_update()

    {

        if (isset($_POST['id_bag']) && $_POST['id_bag'] != null && isset($_POST['count']) && $_POST['count'] != null) {

            if (Yii::$app->user->isGuest) {

                print " شما لاگین نکرده اید";

                exit;

            }

            $tblBag = new Tblbag();

            $bag = $tblBag->find()->where(['id' => $_POST['id_bag']])->andWhere(['id_user' =>Yii::$app->user->getId()])->one();

            if (!filter_var(intval($_POST['count']), FILTER_VALIDATE_INT)) {

                print "تعداد باید عدد باشد";

                exit;

            }

            $bag->count = intval($_POST['count']);

            if ($bag->save()) {

                print "1";

            } else {

                print "لطفا مجدد تلاش کنید";

                exit;

            }

        } else if (isset($_POST['id_bag']) && $_POST['id_bag'] != null) {

            if (Yii::$app->user->isGuest) {

                print " شما لاگین نکرده اید";

                exit;

            }

            $tblBag = new Tblbag();

            $bag = $tblBag->find()->where(['id' => $_POST['id_bag']])->andWhere(['id_user' => yii::$app->user->getId()])->one();

            if ($bag->delete()) {

                print "1";

            } else {

                print "لطفا مجدد تلاش کنید";

                exit;

            }

        } else {

            print "داده هایی ارسالی اشتباه است ";

            exit();

        }

    }


//بررسی شد
    public function actionListcart()

    {

        $tblBag = new Tblbag();

        $tblPro = new Tblproduct();

        $tblExist = new Tblexist();

        $tblGaleri = new Tblgallery();

        $price = 0;

        if (Yii::$app->user->isGuest) {

            $sendAndroid['result'] = 0;

            $sendAndroid['msg'] = " شما لاگین نکرده اید";

            return $sendAndroid;

            exit;

        };

        if (!isset($_POST['idFactor']) && $_POST['idFactor'] == null) {

            $sendAndroid['result'] = 0;

            $sendAndroid['msg'] = "شماره فاکتور به سرور ارسال نشده است";

            return $sendAndroid;

            exit;

        }

        $Bag = $tblBag->find()->where(['id_user' => Yii::$app->user->id])->andWhere(['id_fac' => intval($_POST['idFactor'])])->all();

        if ($Bag == null) {

            $sendAndroid['result'] = 0;

            $sendAndroid['msg'] = "فاکتوری با این شماره موجود نمی باشد";

            return $sendAndroid;

            exit;

        }

        foreach ($Bag as $rowBag) {

            $pro = $tblPro->find()->where(["id" => $rowBag->id_pro])->one();

            if ($pro == null) {

                $id_pro = $rowBag->id_pro;

                $namePro = "حذف شده است";

                $priceTakhfif = 1;

            } else {

                $id_pro = $pro->id;

                $namePro = $pro->name;

                $priceTakhfif = $pro->takhfif;

            }

//            $img = explode(',', $pro->id_img);

//            $showImg = $tblGaleri->find()->where(["id" => $img[0]])->one();

            $createData['count'] = $rowBag->count;

            $createData['id_bag'] = $rowBag->id;

            $createData['idPro'] = $id_pro;

            $createData['name'] = $namePro;

            $createData['price'] = $priceTakhfif;

            $url = yii::$app->urlManager;

//            ($showImg->img != null ? $img = $showImg->img : $img = "user.png");

            $img=$pro->img;
            $createData["img"] = "http://192.168.1.104" . "/upload/" . $img;

            $price = $price + ($rowBag->price * $rowBag->count);

            $arrCraete[] = $createData;



        }

        $sendData['result'] = 1;

        $sendData['msg'] = "محاسباتت تمام شد";

        $sendData["pro"] = $arrCraete;

        $sendData['price'] = $price;



        return $sendData;



    }




//بررسی شد
    public function actionCart()

    {



        if (isset($_POST['id']) && $_POST['id'] != null ) {

            if (Yii::$app->user->isGuest) {

                print " شما لاگین نکرده اید";

                exit;

            }



            $tblPro =Tblproduct::find()->where(["id" => $_POST['id']])->one();

            if ($tblPro == null) {

                print "متاسفانه این محصول به اتمام رسیده است";

                exit();

            }

            $tblBag = new Tblbag();

            $tblBag->id_user = yii::$app->user->id;

            $tblBag->id_pro = $tblPro->id;

            $tblBag->count = 1;

            $tblBag->date = date('Y/m/d');

            $date = new jdf();

            $tblBag->date_ir = $date->date('Y/m/d');

            $tblBag->id_fac = 0;

            $tblBag->enabel = 1;

            $tblBag->down_buy = 0;

            $tblBag->id_size = 0;

            $tblBag->id_color = "o";

            $tblBag->id_all_post = "valid";

            $tblBag->price = $tblPro->takhfif;

            $tblBag->id_discount = 0;

//            $stor = explode("-", $_POST['shop']);
//
//            ($stor[0] != null ? $storr = $stor[0] : $storr = 0);
//
//            $tblBag->store = $storr;

            if ($tblBag->save()) {



                print "1";

                exit;

            } else {

                print "در ذخیره اطلاعات مشکلی وجود دارد";

                exit();

            }

        } else {

            print "داده هایی ارسالی اشتباه است ";

            exit();

        }

    }




//بررسی شد
//    این اکشن مربوط به بررسی موجودی محصول میباشد

    public function actionDetail_cart()

    {

        $tblBag = new Tblbag();

        $tblPro = new Tblproduct();

        $price = 0;

        if (Yii::$app->user->isGuest) {

            print " شما لاگین نکرده اید";

            exit;

        };

        $Bag = $tblBag->find()->where(['id_user' => yii::$app->user->id])->andWhere(['down_buy' => 0])->all();

        if ($Bag != null) {

            foreach ($Bag as $rowBag) {


                $pro = $tblPro->find()->where(["id" => $rowBag->id_pro])->one();

                if ($pro->exist !=0) {

                    $img =  $pro->img;



                    $createData['result'] = 1;

                    $createData['count'] = $rowBag->count;

                    $createData['id_bag'] = $rowBag->id;

                    $createData['id'] = $pro->id;

                    $createData['name'] = $pro->name;

                    $createData['price'] = $pro->takhfif;

                    $createData['msg'] = "این محصول موجود است";

                    $url = yii::$app->urlManager;

                

                    $createData["img"] = "http://192.168.1.104" . "/upload/" . $img;

                    $price = $price + ($rowBag->price * $rowBag->count);

                    $arrCraete[] = $createData;

                } else {

                    $createData['name'] = $pro->name;

                    $createData['result'] = 0;

                    $createData['msg'] = "این محصول به اتمام رسیده است";

                }

            }

            $sendData['result'] = 1;

            $sendData['msg'] = "محاسباتت تمام شد";

            $sendData["pro"] = $arrCraete;

            $sendData['price'] = $price;

        } else {

            $sendData['price'] = 0;

            $sendData['result'] = 0;

            $sendData["pro"] = 0;

            $sendData['msg'] = "سبد خرید خالی است";

        }

        return $sendData;



    }

    public function actionTest2()

    {

//        date_default_timezone_set("Asia/Tehran");

        $p = "d5";

        if (filter_var(intval($p), FILTER_VALIDATE_INT))

            echo "true";

//

//        $parent = date("Y/m/d H:i:sa");

//        echo "<br />".$parent;

//        $p=explode(" ",$parent);

//        $time=$p[1];

//        echo "<br />".$time;

////        $t= strtotime(data("H:i:sa","16:09:09pm"));

////        echo  "<br />";

////        var_dump($t) ;

//        $d1=mktime(2,0,10,10,28,2007);

//        $d2=mktime(4,0,0,10,28,2007);

//        $period=$this->DateDiff($d1,$d2);

//        printf("<br>%s",date("I d.m.Y H:i",$d1));

//        printf("<br>%u hour",$period/3600);

//        printf("<br>%s",date("I d.m.Y H:i",$d2));

//        $year = $time/31556926 % 12;  // to get year

//        $week = $time / 604800 % 52;  // to get weeks

//        $hour = $time / 3600 % 24;    // to get hours

//        $minute = $time / 60 % 60;    // to get minutes

//        $second = $time % 60;

//

//        $p = time("11/25/2017 15:20:26");

//        echo "<br />" . $p = mktime(15, 20, 59, 11, 25, 2017);

//        echo "<br />" . $p1 = mktime(20, 20, 57, 11, 25, 2017);

//        echo "<br />" . $po = $p1 - $p;

//        echo "<br />s" . $s = $po % 60;

//        echo "<br />m=" . $m = $po / 60 % 60;

//        echo "<br />h=" . $h = $po / 3600 % 24;

//

//

//        echo "<br />" . $t = $s + ($m * 60) + ($h * 3600) + (3 * 3600 * 24);

//        $p = $p + $t;

//

//        echo "<br />";

//        var_dump($p);

//        echo "<br />" . date("m/d/Y h:i:s", $p);





    }





}